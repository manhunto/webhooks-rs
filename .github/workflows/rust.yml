name: Rust checks

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"
  SQLX_VERSION: 0.7.4
  SQLX_FEATURES: "rustls,postgres"

jobs:
  build:
    runs-on: ghcr.io/manhunto/webhooks-rs-dev:test
    services:
      postgres:
        image: postgres:16.3-alpine3.19
        env:
          POSTGRES_USER: webhooks
          POSTGRES_PASSWORD: webhooks
          POSTGRES_DB: webhooks
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Cache setup
        uses: Swatinem/rust-cache@v2
      - name: Init db
        run: ./scripts/init-db.sh
      - name: Build
        run: cargo build --all-targets --verbose
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3-alpine3.19
        env:
          POSTGRES_USER: webhooks
          POSTGRES_PASSWORD: webhooks
          POSTGRES_DB: webhooks
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Cache setup
        uses: Swatinem/rust-cache@v2
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --version=${{ env.SQLX_VERSION }} --features ${{ env.SQLX_FEATURES }} --no-default-features --locked
      - name: Init db
        run: ./scripts/init-db.sh
      - name: Run tests
        run: cargo test --workspace --verbose
  coverage:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3-alpine3.19
        env:
          POSTGRES_USER: webhooks
          POSTGRES_PASSWORD: webhooks
          POSTGRES_DB: webhooks
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Cache setup
        uses: Swatinem/rust-cache@v2
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --version=${{ env.SQLX_VERSION }} --features ${{ env.SQLX_FEATURES }} --no-default-features --locked
      - name: Init db
        run: ./scripts/init-db.sh
      - name: Install tarpaulin
        run: cargo install --version 0.29.2 cargo-tarpaulin
      - name: Generate code coverage
        run: cargo +nightly tarpaulin --verbose --all-features --workspace --ignore-tests --timeout 120 --out xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.3.1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml
  clippy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3-alpine3.19
        env:
          POSTGRES_USER: webhooks
          POSTGRES_PASSWORD: webhooks
          POSTGRES_DB: webhooks
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Cache setup
        uses: Swatinem/rust-cache@v2
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --version=${{ env.SQLX_VERSION }} --features ${{ env.SQLX_FEATURES }} --no-default-features --locked
      - name: Init db
        run: ./scripts/init-db.sh
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run fmt
        run: cargo fmt --all --check
  udeps:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3-alpine3.19
        env:
          POSTGRES_USER: webhooks
          POSTGRES_PASSWORD: webhooks
          POSTGRES_DB: webhooks
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Cache setup
        uses: Swatinem/rust-cache@v2
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --version=${{ env.SQLX_VERSION }} --features ${{ env.SQLX_FEATURES }} --no-default-features --locked
      - name: Init db
        run: ./scripts/init-db.sh
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Run cargo-udeps
        uses: aig787/cargo-udeps-action@v1
        with:
          version: 'latest'
          args: '--all-targets'